double f2r_raw[22] = {0.785027852
,0.760148235
,0.726864778
,0.688528786
,0.7011414
,0.672678238
,0.661816202
,0.595740043
,0.616849418
,0.584403988
,0.570240908
,0.544167521
,0.532724838
,0.53098531
,0.5334074
,0.503428122
,0.509080283
,0.481527393
,0.491748265
,0.476399119
,0.477933714
,0.465344335
};

double f2r_whitlow[22] = {0.749740219
,0.72584453
,0.693859007
,0.656991939
,0.669124354
,0.641740585
,0.631286408
,0.567643008
,0.587984219
,0.556715967
,0.543060463
,0.517911497
,0.506870416
,0.505191721
,0.507529093
,0.478590536
,0.484047796
,0.457439239
,0.467311498
,0.452485127
,0.453967658
,0.441804068
};

double f2r_bodek[22] = {0.737363613
,0.713809033
,0.682273755
,0.645916631
,0.657882297
,0.630873409
,0.620560943
,0.557763489
,0.577837457
,0.546978793
,0.533499983
,0.508672956
,0.497771793
,0.496114295
,0.498422147
,0.469846333
,0.475235642
,0.448956392
,0.458707061
,0.444063035
,0.445527404
,0.43351237
};

double f2r_d_p[22] = {0.724534031
,0.701330858
,0.670259566
,0.634428158
,0.646221892
,0.619599569
,0.609433263
,0.547508689
,0.567306836
,0.536870933
,0.523574548
,0.499079977
,0.488323334
,0.486687733
,0.488965091
,0.460764033
,0.466083132
,0.440144185
,0.449769191
,0.435313624
,0.436759219
,0.424897744
};

double f2r_err[22] = {0.016995877
,0.016537276
,0.01680723
,0.016682204
,0.017890173
,0.018118659
,0.019910167
,0.019825702
,0.021032978
,0.020370104
,0.019512336
,0.020113808
,0.019823018
,0.020445354
,0.021116439
,0.020550864
,0.021913246
,0.020319837
,0.02020853
,0.01999537
,0.021465156
,0.023272319
};

double f2r_data(double bc, int norm=0){
  if( bc<0.195 || bc>0.825){
    return 0;
  }else{
    double index = (bc-0.195)/0.03;
    //int i = int((bc-0.195)/0.03);
    index += 0.1; //For some stupid reason root doesn't know how a floor works for numbers greater than 20?!!?!?!??!?!?!?!?!?!?!?!?!?!
    int i = TMath::FloorNint(index);
    cout << bc << " " << index << " " << i << endl;
    if(norm==1){
      return f2r_d_p[i];
    }else if(norm==2){
      return f2r_bodek[i];
    }else if(norm==3){
      return f2r_whitlow[i];
    }else{
      return f2r_raw[i];
    }
  }
}

double getf2err(double bc){
  if( bc<0.195 || bc>0.825){
    return 0;
  }else{
    double index = (bc-0.195)/0.03;
    //int i = int((bc-0.195)/0.03);
    index += 0.1; //For some stupid reason root doesn't know how a floor works for numbers greater than 20?!!?!?!??!?!?!?!?!?!?!?!?!?!
    int i = TMath::FloorNint(index);
    //cout << bc << " " << index << " " << i << endl;
    
    return f2r_err[i];
  }
}
